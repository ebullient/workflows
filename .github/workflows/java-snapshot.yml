name: Update snapshot release

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      artifact:
        required: true 
        type: string
      snapshot:
        required: true 
        type: string

env:
  GH_BOT_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  GH_BOT_NAME: "GitHub Action"
  JAVA_VERSION: 17
  GRAALVM_DIST: graalvm-community
  JAVA_DISTRO: temurin

permissions: {}

concurrency:
  group: "snapshot"
  cancel-in-progress: true

jobs:
  snapshot:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: 'main'

      - name: configure git
        run : |
          git config user.name ${{ env.GH_BOT_NAME }}
          git config user.email ${{ env.GH_BOT_EMAIL }}

      - name: Download all workflow run artifacts
        id: download
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Update release with snapshot artifact
        id: mvn-release-snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACT: ${{ inputs.artifact }}
          SNAPSHOT: ${{ inputs.snapshot }}
        run: |
          find .

          BINARY=./artifacts/${ARTIFACT}-${SNAPSHOT}

          gh release upload "${SNAPSHOT}" --clobber ${BINARY}-runner.jar#=${ARTIFACT}-${SNAPSHOT}-runner.jar

          if [[ -f ${BINARY}-linux-x86_64.zip ]]; then
            gh release upload "${SNAPSHOT}" --clobber ${BINARY}-linux-x86_64.zip#${ARTIFACT}-${SNAPSHOT}-linux-x86_64.zip
          fi
          if [[ -f ${BINARY}-windows-x86_64.zip ]]; then
            gh release upload "${SNAPSHOT}" --clobber ${BINARY}-windows-x86_64.zip#${ARTIFACT}-${SNAPSHOT}-windows-x86_64.zip
          fi
          if [[ -f ${BINARY}-osx-x86_64.zip ]]; then
            gh release upload "${SNAPSHOT}" --clobber ${BINARY}-osx-x86_64.zip#${ARTIFACT}-${SNAPSHOT}-osx-x86_64.zip
          fi
          if [[ -f ${BINARY}-osx-x86_64.zip ]]; then
            gh release upload "${SNAPSHOT}" --clobber ${BINARY}-osx-aarch_64.zip #${ARTIFACT}-${SNAPSHOT}-osx-aarch_64.zip
          fi
  
      - name: Update snapshot tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SNAPSHOT: ${{ inputs.snapshot }}
        shell: bash
        run: |
          echo "Update tag for $SNAPSHOT"
          git push origin :refs/tags/$SNAPSHOT
          git tag -f $SNAPSHOT
          git push --tags

          echo "Update $SNAPSHOT release"
          gh release edit "${SNAPSHOT}" -t "${SNAPSHOT}" --prerelease

      - name: Not draft release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SNAPSHOT: ${{ inputs.snapshot }}
        run: |
          gh release edit "${SNAPSHOT}" --draft=false
          gh release view "${SNAPSHOT}"